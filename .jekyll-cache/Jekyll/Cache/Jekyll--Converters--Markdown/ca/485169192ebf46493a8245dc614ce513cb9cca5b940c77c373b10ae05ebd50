I"˙>  <img src="/assets/Ardour/Lv2vst.png" alt="LV2VST x42 EQ">
  <div class="image-caption">x42 Equalizer in Studio One 3</div>

<p>There‚Äôs some awesome <a href="http://lv2plug.in">LV2 plugins</a> out there for Macs, like the <a href="http://x42-plugins.com/x42/">X42 plugins</a>. Not everyone uses an LV2 host on macOS, but many people do use VST hosts. Even though mac-compatible LV2s, especially with GUIs, are rare, it‚Äôs likely that increased user interest will generate increased developer support.</p>

<p><em>If you end up using an LV2 and enjoy it, please contact the developer and let them know that you appreciate their work!</em></p>

<p>So here‚Äôs a short tutorial on how to use <a href="https://github.com/x42/lv2vst">lv2vst</a> to wrap your LV2 plugins to VST!</p>

<p>First will be a run-down for moderately experienced users/developers. Then I‚Äôm going to assume that you are on 10.11+ and have a bare-bones installation and know basically nothing.</p>

<p>This is written in my typical style rather than in a documentation format. <em>This is not documentation</em>. This is a how-to. If you have any questions, please post them in the comments.</p>

<!--more-->

<h1 class="no_toc" id="contents">Contents</h1>
<ul id="markdown-toc">
  <li><a href="#for-developers" id="markdown-toc-for-developers">For developers</a>    <ul>
      <li><a href="#system-wide" id="markdown-toc-system-wide">System wide</a></li>
      <li><a href="#bundles" id="markdown-toc-bundles">Bundles</a>        <ul>
          <li><a href="#create-the-whitelist" id="markdown-toc-create-the-whitelist">Create the whitelist</a></li>
          <li><a href="#create-the-bundles" id="markdown-toc-create-the-bundles">Create the bundles</a></li>
          <li><a href="#make" id="markdown-toc-make">Make</a></li>
          <li><a href="#copy-the-lv2s" id="markdown-toc-copy-the-lv2s">Copy the lv2s</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#for-newbies---prerequisites" id="markdown-toc-for-newbies---prerequisites">For newbies - Prerequisites</a>    <ul>
      <li><a href="#install-command-line-tools" id="markdown-toc-install-command-line-tools">Install Command Line Tools</a></li>
      <li><a href="#confirm-installation" id="markdown-toc-confirm-installation">Confirm installation</a></li>
      <li><a href="#update-ruby" id="markdown-toc-update-ruby">Update Ruby?</a></li>
      <li><a href="#install-homebrew" id="markdown-toc-install-homebrew">Install homebrew</a></li>
      <li><a href="#install-git" id="markdown-toc-install-git">Install git</a></li>
    </ul>
  </li>
  <li><a href="#method-one---easy-mode" id="markdown-toc-method-one---easy-mode">Method one - Easy mode</a>    <ul>
      <li><a href="#the-homebrew-method" id="markdown-toc-the-homebrew-method">The homebrew method.</a>        <ul>
          <li><a href="#installing-lv2s-with-homebrew" id="markdown-toc-installing-lv2s-with-homebrew">Installing LV2s with homebrew</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#method-two---hard-mode" id="markdown-toc-method-two---hard-mode">Method two - Hard mode</a></li>
  <li><a href="#conclusion" id="markdown-toc-conclusion">Conclusion</a></li>
  <li><a href="#support-me" id="markdown-toc-support-me">Support Me!</a></li>
</ul>

<h1 id="for-developers">For developers</h1>

<p>If you‚Äôre a developer or familiar with building software yourself then simple go to <a href="https://github.com/x42/lv2vst">lv2vst</a> and clone.</p>

<p>Now you have 2 choices‚Ä¶</p>

<h2 id="system-wide">System wide</h2>

<p>To have the lv2vst wrap all your lv2 plugins on your system already then simply run <code class="highlighter-rouge">make osxbundle</code> then <code class="highlighter-rouge">mv lv2.vst /Library/Audio/Plug-ins/VST</code>. or you can create a symbolic link with <code class="highlighter-rouge">ln -s lv2.vst /Library/Audio/Plug-ins/VST/lv2.vst</code></p>

<p>lv2.vst will wrap your plugins that are located in the following directories:</p>

<ul>
  <li>~/.lv2</li>
  <li>~/Library/Audio/Plug-Ins/LV2</li>
  <li>/Library/Audio/Plug-Ins/LV2</li>
</ul>

<p>If these directories change, the information is located in ‚Äòinclude/lilv_config.h‚Äô as <code class="highlighter-rouge"># define LILV_DEFAULT_LV2_PATH </code>.</p>

<h2 id="bundles">Bundles</h2>

<p>Bundling an lv2 allows you to create a single ‚Äò.vst‚Äô that contains one or more lv2s as a single package. This is a slightly more involved process, but it‚Äôs rather simple to do manually. Feel free to write a script if you wish.</p>

<p>There are 4 parts to the process:</p>

<h3 id="create-the-whitelist">Create the whitelist</h3>

<p>Create a file named <code class="highlighter-rouge">whitelist</code></p>

<p>plugin.lv2 will be a directory. Inside the directory will be a file called ‚Äòmanifest.ttl`. Open this file.</p>

<p>Inside ‚Äòmanifest.ttl‚Äô you need to search for the string ‚Äúa lv2:Plugin‚Äù. The string before that is your URI.</p>

<ul>
  <li>If the URI is already in &lt; &gt; then that is the URI. Like this: &lt;http://calf.sourceforge.net/plugins/VintageDelay&gt;</li>
  <li>If it looks like plugin:word, then you need to search for ‚Äú@prefix plugin:‚Äù. Take the string in &lt; &gt;, then add the ‚Äòword‚Äô from before.
    <ul>
      <li>So if I see: <code class="highlighter-rouge">fil4:mono</code> then I search for ‚Äú@prefix fil4:‚Äù</li>
      <li>I find the line <code class="highlighter-rouge">@prefix fil4: &lt;http://gareus.org/oss/lv2/fil4#&gt; .</code></li>
      <li>Take the URI and combine it with the word after the colon. This makes our URI as <code class="highlighter-rouge">http://gareus.org/oss/lv2/fil4#mono</code></li>
    </ul>
  </li>
</ul>

<p>Create a new file named <code class="highlighter-rouge">whitelist</code>.</p>

<p>Place your list of URIs, one per line, inside quotes and comma separated. The final line is ‚ÄúNULL‚Äù. An example:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>"http://gareus.org/oss/lv2/fil4#mono",
"http://gareus.org/oss/lv2/fil4#stereo",
NULL
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong>NOTE</strong> You may wish to simply investigate using lv2ls to get lv2 URIs more reliably. You can learn more <a href="http://lv2plug.in/book/#_manifest_ttl_in">in the lv2 documentation</a> about the manifest format.</p>

<h3 id="create-the-bundles">Create the bundles</h3>

<p>Bundles are easy. Create a file named <code class="highlighter-rouge">bundles</code>. Each line is the name of the lv2 with a relative directory, inside quotes, comma separated, and the final line is ‚ÄúNULL‚Äù. Here is an example:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>"../LV2/fil4.lv2",
NULL
</pre></td></tr></tbody></table></code></pre></div></div>

<p>This is the directory relative to lv2.vst/Contents/MacOS/ where your .lv2 is located. In this example we are putting the .lv2 in lv2.vst/Contents/LV2</p>

<h3 id="make">Make</h3>

<p>run <code class="highlighter-rouge">make osxbundle BUNDLES=bundles WHITELIST=whitelist</code></p>

<p>This will create an lv2.vst in the directory.</p>

<h3 id="copy-the-lv2s">Copy the lv2s</h3>

<p>Now you need to create a directory with <code class="highlighter-rouge">mkdir lv2.vst/Contents/LV2</code>.</p>

<p>Copy your plugin.lv2 to ‚Äòlv2.vst/Contents/LV2‚Äô.</p>

<p>Now you may rename your lv2.vst and copy it to your VST folder with <code class="highlighter-rouge">cp lv2.vst /Library/Audio/Plug-Ins/VST</code>.</p>

<p>Open your VST host and it should work! If it doesn‚Äôt then drop me a comment. I‚Äôve tried this on 3 separate machines with a variety of lv2 plugins, and it‚Äôs fairly foolproof.</p>

<h1 id="for-newbies---prerequisites">For newbies - Prerequisites</h1>

<p>There are 2 ways I‚Äôm going to explain how to use lv2vst. Both of these require some prerequisite software installed.</p>

<p>If you run in to any issues, please try to google first! Some things can be easily fixed by <strong>googling the error message</strong>.</p>

<h2 id="install-command-line-tools">Install Command Line Tools</h2>

<p>Open Terminal.app (it‚Äôs in /Applications/Utilities/Terminal.app).</p>

<p>Type ‚Äúgcc‚Äù then hit enter.</p>

<p>A prompt will show up asking you if you want to install the tools. Install it.</p>

<h2 id="confirm-installation">Confirm installation</h2>

<p>Type <code class="highlighter-rouge">make</code>. You should receive an error: <code class="highlighter-rouge">make: *** No targets specified and no makefile found.  Stop.</code></p>

<p>Great.</p>

<p>If it says <code class="highlighter-rouge">-bash: make: command not found</code>, then you need to install the command line tools. Perhaps google will help you out here, it‚Äôs not not that difficult.</p>

<h2 id="update-ruby">Update Ruby?</h2>

<p>Type <code class="highlighter-rouge">ruby -v</code> in Terminal.app. If the result is 2.0.0 or anything lower than 2.3.0, then you need to update Ruby.</p>

<p>Type the following in Terminal.app</p>

<ul>
  <li><code class="highlighter-rouge">\curl -sSL https://get.rvm.io | bash -s stable</code></li>
  <li><code class="highlighter-rouge">rvm install ruby-2.4.2</code></li>
</ul>

<p>Type <code class="highlighter-rouge">ruby -v</code> again and make sure you are on version 2.4.2. If you are not, then get googling!</p>

<h2 id="install-homebrew">Install homebrew</h2>

<p>Now we need to install <a href="https://brew.sh">homebrew</a>, which is a program that lets us install programs easily.</p>

<p>Inside Terminal.app, type <code class="highlighter-rouge">/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</code>.</p>

<p>Press enter and let it do its thing.</p>

<h2 id="install-git">Install git</h2>

<p>This is why we‚Äôve installed homebrew. In Terminal.app simply type <code class="highlighter-rouge">brew install git</code>.</p>

<p>When it‚Äôs done, typing <code class="highlighter-rouge">git</code> should give you a bunch of nonsense (that‚Äôs all git ever does anyway).</p>

<h1 id="method-one---easy-mode">Method one - Easy mode</h1>

<p>This is the simplest way to get things working.</p>

<h2 id="the-homebrew-method">The homebrew method.</h2>

<p>In your terminal.app type <code class="highlighter-rouge">brew tap david0/homebrew-audio</code>. This allows homebrew to build the applications at <a href="https://github.com/david0/homebrew-audio">https://github.com/david0/homebrew-audio</a>.</p>

<p>Now you can build lv2vst with <code class="highlighter-rouge">brew install lv2vst</code>.</p>

<p>When this has finished, type <code class="highlighter-rouge">brew list lv2vst</code>. You should see something like this: <code class="highlighter-rouge">/usr/local/Cellar/lv2vst/HEAD-a9a0c3d/lib/vst/ (3 files)</code></p>

<p>Now take that directory and run the command <code class="highlighter-rouge">ln -s [directory]/lv2.vst /Library/Audio/Plug-ins/VST/lv2.vst</code>. Replace the [directory] with the directory from your list command. So my command would look like <code class="highlighter-rouge">ln -s /usr/local/Cellar/lv2vst/HEAD-a9a0c3d/lib/vst/lv2.vst /Library/Audio/Plug-ins/VST/lv2.vst</code>.</p>

<p>The previous command creates what is called a ‚Äòsymbolic link‚Äô. This creates a link (that looks like a file or directory) that simply points to another location on your disk.</p>

<p>Now you‚Äôre done! Any lv2 plugins that you install in the following directories should be scanned and wrapped:</p>

<ul>
  <li>~/.lv2</li>
  <li>~/Library/Audio/Plug-Ins/LV2</li>
  <li>/Library/Audio/Plug-Ins/LV2</li>
</ul>

<h3 id="installing-lv2s-with-homebrew">Installing LV2s with homebrew</h3>

<p>Homebrew also allows you to install some mac LV2 plugins. Check out <a href="https://github.com/david0/homebrew-audio/tree/master/Formula">here for more lv2s that you can install</a>.</p>

<p>An example would be to try <code class="highlighter-rouge">brew install mverb-lv2</code>.</p>

<p>You may need to move, copy or symbolic link your lv2 to one of the following directories:</p>

<ul>
  <li>~/.lv2</li>
  <li>~/Library/Audio/Plug-Ins/LV2</li>
  <li>/Library/Audio/Plug-Ins/LV2</li>
</ul>

<p>To find out where brew installed the plugin you just built, you would type <code class="highlighter-rouge">brew list mverb-lv2</code>. Follow the directions in the previous section for information on how to move, or symbolic link the file to the appropriate directory.</p>

<p>Moving mverb2-lv2 <em>may</em> look like this: <code class="highlighter-rouge">mkdir /Library/Audio/Plug-ins/LV2</code> followed by <code class="highlighter-rouge">mv /usr/local/Cellar/mverb-lv2/HEAD-98b3a5f/lib/lv2/jg_mverb.lv2 /Library/Audio/Plug-ins/LV2</code>.</p>

<p><strong>Take note!</strong> The plugin‚Äôs name is <code class="highlighter-rouge">jg_mverb.lv2</code> in this case. First I typed <code class="highlighter-rouge">cd /usr/local/Cellar/mverb-lv2/HEAD-98b3a5f/lib/lv2/</code>, then <code class="highlighter-rouge">ls</code> to see what the name of the .lv2 file was before I tried to copy it.</p>

<h1 id="method-two---hard-mode">Method two - Hard mode</h1>

<p>This is pretty much just as foolproof, but different.</p>

<p>Create a new directory somewhere you want with <code class="highlighter-rouge">mkdir [directory]</code> with location being the name of a directory. So for example I may do <code class="highlighter-rouge">mkdir ~/Programming/lv2vst</code>. The ~ represents your home directory.</p>

<p>Now you need to get to that directory. Type <code class="highlighter-rouge">cd [directory]</code> with [directory] being the directory you created. I would type <code class="highlighter-rouge">cd ~/Programming/lv2vst</code>. Now anything that we do will occur in that directory.</p>

<p>We need to get the lv2vst source files on our computer. This is easily done by typing <code class="highlighter-rouge">git clone https://github.com/x42/lv2vst</code>.</p>

<p>Time to build! Simply type <code class="highlighter-rouge">make osxbundle</code>, and begin a prayer to your preferred god. If there‚Äôs no errors (warnings are OK) then we can move on. If there is an error, then get googling or leave me a comment.</p>

<p>If you successfully created lv2.vst (type <code class="highlighter-rouge">ls</code> to see), then all that‚Äôs left is to move it to your plugins director. You can either type <code class="highlighter-rouge">mv lv2.vst /Library/Audio/Plug-ins/VST</code> to move it, or you can create a symbolic link with <code class="highlighter-rouge">ln -s lv2.vst /Library/Audio/Plug-ins/VST/lv2.vst</code>. A symbolic link creates a link (that looks like a file or directory) that simply points to another location on your disk.</p>

<h1 id="conclusion">Conclusion</h1>

<p>I‚Äôm almost 100% certain I made an error or two here. If you have any trouble please let me know so that I can fix it.</p>

<p>Currently there aren‚Äôt too many mac-compatible LV2 plugins. The <a href="http://x42-plugins.com/x42/">awesome x42 plugins</a> alone are worth the effort though! Currently not all of them work, but with more interested mac users the <a href="https://github.com/x42?tab=repositories">super helpful and patient developer</a> may be inclined to further support the mac lv2 platform.</p>

<h1 id="support-me">Support Me!</h1>

<p>This post took 9 hours to research, test, write and edit. <a href="https://github.com/x42">Robin Gareus</a> was extremely helpful during this time in helping tracking down a bug in lv2vst as well as helping me understand how to operate it. If you appreciate the information presented then please donate or drop a line to Robin to let him know that you appreciate his work!</p>

<p>If you have any questions or comments, please comment below! I read every comment and respond to most.</p>

:ET